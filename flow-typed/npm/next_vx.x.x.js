// flow-typed signature: 65f82ec98a2de11a1dc3e410d0fa35f2
// flow-typed version: <<STUB>>/next_v6.x.x/flow_v0.76.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'next'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'next' {
  declare type NextApp = {
    prepare(): Promise<void>,
    getRequestHandler(): any,
    render(req: any, res: any, pathname: string, query: any): any,
    renderToHTML(req: any, res: any, pathname: string, query: string): string,
    renderError(err: Error, req: any, res: any, pathname: any, query: any): any,
    renderErrorToHTML(
      err: Error,
      req: any,
      res: any,
      pathname: string,
      query: any,
    ): string,
  }
  declare module.exports: (...opts: any) => NextApp
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */

declare module 'next/head' {
  declare module.exports: Class<React$Component<any, any>>
}

declare module 'next/link' {
  declare module.exports: Class<
    React$Component<{ href: string, prefetch?: boolean }, any>,
  >
}

declare module 'next/error' {
  declare module.exports: Class<React$Component<{ statusCode: number }, any>>
}

declare module 'next/router' {
  declare module.exports: {
    route: string,
    pathname: string,
    query: Object,
    onRouteChangeStart: ?(url: string) => void,
    onRouteChangeComplete: ?(url: string) => void,
    onRouteChangeError: ?(
      err: Error & { cancelled: boolean },
      url: string,
    ) => void,
    push(url: string, as: ?string): Promise<boolean>,
    replace(url: string, as: ?string): Promise<boolean>,
  }
}

declare module 'next/document' {
  declare export var Head: Class<React$Component<any, any>>
  declare export var Main: Class<React$Component<any, any>>
  declare export var NextScript: Class<React$Component<any, any>>
  declare export default Class<React$Component<any, any>> & {
    getInitialProps: (ctx: {
      pathname: string,
      query: any,
      req?: any,
      res?: any,
      jsonPageRes?: any,
      err?: any,
    }) => Promise<any>,
    renderPage(cb: Function): void,
  }
}

declare module 'next/app' {
  declare module.exports: any
}

declare module 'next/asset' {
  declare module.exports: any
}

declare module 'next/client' {
  declare module.exports: any
}

declare module 'next/config' {
  declare module.exports: any
}

declare module 'next/constants' {
  declare module.exports: any
}

declare module 'next/dynamic' {
  declare module.exports: any
}

declare module 'next/prefetch' {
  declare module.exports: any
}
