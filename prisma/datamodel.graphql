type User {
  id: ID! @unique
  name: String!
  firstName: String!
  profilePhoto: String
  email: String! @unique
  username: String
  contactInfo: String
  profession: String
  timezone: String!
  baseCity: String
  baseCountry: String
  baseLatitude: Float
  baseLongitude: Float
  daysOff: [Int!]!
  memberOf: [WorkspaceMember!]!
  vacations: [UserVacation!]!
  workHours: UserWorkHours
  googleProviderId: String
  pendingSetup: Boolean
  deletedAt: DateTime
  lastSeen: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Workspace {
  id: ID! @unique
  members: [WorkspaceMember!]!
    @relation(name: "WorkspaceMemeber", onDelete: CASCADE)
  name: String!
  slug: String! @unique
  creator: User!
  profilePhoto: String
  twistWorkspaceId: Int
  deletedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum PermissionTags {
  ADMIN
  MEMBER
  GUEST
}

type WorkspaceMember {
  id: ID! @unique
  workspace: Workspace! @relation(name: "WorkspaceMemeber")
  user: User!
  groups: [Group!]!
  permissionRole: PermissionTags! @default(value: MEMBER)
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Group {
  id: ID! @unique
  workspace: Workspace!
  members: [WorkspaceMember!]!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserVacation {
  id: ID! @unique
  user: User!
  from: DateTime!
  to: DateTime!
  timezone: String!
  city: String
  country: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserWorkHours {
  id: ID! @unique
  user: User!
  automaticUpdate: Boolean
  allDaysFrom: String
  allDaysTo: String
  sundayFrom: String
  sundayTo: String
  tuesdayFrom: String
  tuesdayTo: String
  mondayFrom: String
  mondayTo: String
  wednesdayFrom: String
  wednesdayTo: String
  thursdayFrom: String
  thursdayTo: String
  fridayFrom: String
  fridayTo: String
  saturdayFrom: String
  saturdayTo: String
  createdAt: DateTime!
  updatedAt: DateTime!
}
